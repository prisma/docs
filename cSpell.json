{
  "version": "0.2",
  "language": "en",
  "words": [
    "Amplication",
    "Astro",
    "autocompletions",
    "Autoincrementing",
    "autoscale",
    "backoff",
    "baselined",
    "Baselining",
    "CASL",
    "cockroachdb",
    "codemod",
    "codemods",
    "Coolify",
    "datamodel",
    "datasource",
    "Dittofeed",
    "Documenso",
    "Docusign",
    "Dundring",
    "Dyrector",
    "earlyaccess",
    "ecommerce",
    "Fastify",
    "Formbricks",
    "fulltext",
    "ghostfolio",
    "Hasura",
    "healthcheck",
    "Hitori",
    "hostable",
    "hotfix",
    "hotfixing",
    "idempotency",
    "InnoDB",
    "ISAM",
    "Kysely",
    "leaderboard",
    "Letterpad",
    "livestream",
    "microservices",
    "Middlewares",
    "MSSQLSERVER",
    "neovim",
    "Nestjs",
    "Nuxt",
    "Openform",
    "Overfetching",
    "pgbouncer",
    "planetscale",
    "pooler",
    "poolers",
    "Postico",
    "Pothos",
    "preconfigure",
    "preconfigured",
    "Quickstart",
    "Rallly",
    "Redistributable",
    "refactorings",
    "Replibyte",
    "roadmap",
    "runtimes",
    "Scholarsome",
    "serverful",
    "signup",
    "Snaplet",
    "Solidstart",
    "sqlserver",
    "Streamdal",
    "substep",
    "substeps",
    "Supabase",
    "Sveltekit",
    "Tabnine",
    "TLDR",
    "triaging",
    "Turso",
    "typesense",
    "unikernel",
    "unikernels",
    "upsert",
    "upserts",
    "upvote",
    "walkthrough",
    "Webstudio",
    "Zenstack",
    "Postico",
    "CASL",
    "serverful",
    "autoscale",
    "Tabnine",
    "windsurfrules"
  ],
  "ignoreWords": [
    "Aiven",
    "Ania",
    "Koyeb",
    "Inngest",
    "Neward",
    "nikolasburk",
    "Slonik",
    "Superstruct",
    "Tottem",
    "tsdf",
    "Typebot",
    "umami",
    "Vitess",
    "libgcc",
    "libc",
    "Distroless",
    "Nikolas",
    "Supavisor",
    "inshellisense",
    "janedoe",
    "unindexed",
    "Hyperdrive",
    "pgcat",
    "JAFNSZHQRDTW",
    "BCAA",
    "Turborepo",
    "Deepgram",
    "PGSSLMODE",
    "pgloader",
    "unikernel",
    "Mikro"
  ],
  "patterns": [
    {
      "name": "Markdown links",
      "pattern": "\\((.*)\\)",
      "description": ""
    },
    {
      "name": "Markdown code blocks",
      "pattern": "/^(\\s*`{3,}).*[\\s\\S]*?^\\1/gmx",
      "description": "Taken from the cSpell example at https://cspell.org/configuration/patterns/#verbose-regular-expressions"
    },
    {
      "name": "Inline code blocks",
      "pattern": "\\`([^\\`\\r\\n]+?)\\`",
      "description": "https://stackoverflow.com/questions/41274241/how-to-capture-inline-markdown-code-but-not-a-markdown-code-fence-with-regex"
    },
    {
      "name": "Link contents",
      "pattern": "\\<a(.*)\\>",
      "description": ""
    },
    {
      "name": "Snippet references",
      "pattern": "-- snippet:(.*)",
      "description": ""
    },
    {
      "name": "Snippet references 2",
      "pattern": "\\<\\[sample:(.*)",
      "description": "another kind of snippet reference"
    },
    {
      "name": "Multi-line code blocks",
      "pattern": "/^\\s*```[\\s\\S]*?^\\s*```/gm"
    },
    {
      "name": "HTML Tags",
      "pattern": "<[^>]*>",
      "description": "Reference: https://stackoverflow.com/questions/11229831/regular-expression-to-remove-html-tags-from-a-string"
    }
  ],
  "ignoreRegExpList": [
    "Markdown links",
    "Markdown code blocks",
    "Inline code blocks",
    "Link contents",
    "Snippet references",
    "Snippet references 2",
    "Multi-line code blocks",
    "HTML Tags"
  ],
  "ignorePaths": []
}
